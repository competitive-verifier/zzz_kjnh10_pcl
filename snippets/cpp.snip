snippet  syakutori
    int res = 0;
    int sum = 0;
    int r = 0;
    for (int l=0; l<n; ++l) {
      auto isok=[&](){ // [l, r] e.g [l, r+1) is ok?
        if (sum + s[r]<=k) return true;
        else return false;
      };
      while (r<n && isok()) {
        sum += s[r];
        ++r;
      }
      chmax(res, (r-l));
  
      // 枝刈り（not needed）
      if (r==n) break;
  
      // leftをincrementする準備
      if (r==l) ++r;  // l,rが同時に動くのでsumは変動しない。
      else sum -= s[l];
    }


snippet  gcd
  int gcd(int a, int b){
    if (b>a) swap(a,b);
    if (b==0) return a;
    return gcd(b, a%b);
  }


snippet  lcd
  int gcd(int a, int b){
    if (b>a) swap(a,b);
    if (b==0) return a;
    return gcd(b, a%b);
  }
  int lcd(int a, int b){
    return (a/gcd(a,b))*b;  // overflowしにくいように最初に割り算をする。
  }


snippet  rev
  int gcd(int a, int b){
    if (b>a) swap(a,b);
    if (b==0) return a;
    return gcd(b, a%b);
  }
  int lcd(int a, int b){
    return (a/gcd(a,b))*b;  // overflowしにくいように最初に割り算をする。
  }
  int rev(int number) {
    int reverse=0;
    while (number > 0) {
      reverse = reverse * 10 + number % 10;
      number /= 10;
    }
    return reverse;
  }


